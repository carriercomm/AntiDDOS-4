## file /etc/pf.conf ##

# interfaces #
ext_if = vtnet0
int_if = vtnet1
icmp_types="{echoreq, unreach}"
tcp_services="{ssh, snmp, domain, auth}"
udp_services="{ssh, domain, snmp}"
repo="{update.FreeBSD.org,pkg.FreeBSD.org}"

## OPTIONS ##
set require-order no
set timeout tcp.first 90
set timeout tcp.established 90
set timeout udp.first 90
set timeout udp.single 90
set timeout udp.multiple 360
set timeout icmp.first 90
set timeout icmp.error 300
set loginterface $ext_if
set optimization aggressive
set limit states 200000
set block-policy drop
set skip on lo
set timeout { adaptive.start 20000, adaptive.end 220000 }

## TRAFFIC NORMALIZATION ##
scrub in on $ext_if all fragment reassemble
scrub in all no-df max-mss 1440 min-ttl 64
scrub out all

## QUEUEING ##

## TRANSLATION ##

## BLOCKING SPOOFED TRAFFIC ##
antispoof for $ext_if inet

## PACKET FILTERING ##
table <private> file "/etc/private"
table <bad_host> persist file "/etc/bad_host"
table <bruteforce> persist file "/etc/bruteforce"
block log all
pass in quick log on $ext_if proto {tcp,udp} from <private> to $ext_if keep state
pass out quick log on $ext_if proto {tcp,udp} from any to <private> keep state
pass quick log on $ext_if proto {tcp,udp} from any to $repo keep state
pass in quick log on $ext_if from any to <private> keep state
pass log on $ext_if proto tcp from any to $ext_if port 22 keep state (max-src-conn 3, max-src-conn-rate 1/1, overload <bruteforce> flush global)
pass log on $ext_if proto tcp from any to $ext_if port 80 flags S/SA synproxy state (max-src-nodes 10, max-src-states 10, max-src-conn 10, max-src-conn-rate 100/10, overload <bad_host> flush global )
pass log on $ext_if inet proto icmp icmp-type $icmp_types
pass log on $ext_if inet proto udp from any to any port $udp_services keep state (max-src-nodes 10, max-src-states 10, max-src-conn 10, max-src-conn-rate 100/10, overload <bad_host> flush global )
pass log on $ext_if inet proto tcp from any to any port $tcp_services keep state (max-src-conn 40, max-src-conn-rate 100/10, overload <bad_host> flush global)